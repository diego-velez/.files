#!/usr/bin/python

import subprocess
import sys
import random
import time

screensavers = [
    "~/.local/bin/pipes.sh -r 0 -R -p 5",
    "asciiquarium",
    "cmatrix -r",
    "~/repo_clones/lavat/lavat -k black -c magenta -s 3 -r 1 -b 10",
    "conway-screensaver",
    "~/repo_clones/c-squares/c-squares -d 2 -t 3"
]


def run_screensaver(screensaver):
    subprocess.Popen(
        ["hyprctl", "dispatch", "togglespecialworkspace", "magic"]).wait()
    time.sleep(0.1)

    # We want to increase font size for lavat screensaver but decrease for others
    if screensaver == screensavers[3]:
        subprocess.Popen(
            ["wezterm-gui", "--config", "font_size=16", "start", "-e", "sh", "-c", f"sleep 0.4 && {screensaver}"])
    elif screensaver == screensavers[5]:
        subprocess.Popen(
            ["wezterm-gui", "--config", "font_size=24", "start", "-e", "sh", "-c", f"sleep 0.4 && {screensaver}"])
    else:
        subprocess.Popen(
            ["wezterm-gui", "--config", "font_size=8", "start", "-e", "sh", "-c", f"sleep 0.4 && {screensaver}"])
    time.sleep(0.3)

    subprocess.Popen(
        ["hyprctl", "dispatch fullscreen 0"]).wait()


def can_run():
    # We use activewindow because I think activeworkspace does not show special workspace
    active_window = subprocess.run(
        ["hyprctl", "activewindow"], capture_output=True)
    active_window_output = active_window.stdout.decode("utf-8")

    # Occurs when there is no active window (empty workspace)
    if "Invalid" in active_window_output:
        return True

    # Get active workspace
    for line in active_window_output.split("\n"):
        if line.startswith("\tworkspace: "):
            workspace = int(line.split(": ")[1].split(" (")[0])
        elif line.startswith("\tfullscreen: "):
            is_fullscreen = line.split(": ")[1] == "1"

    # I think negative workspace is special workspace
    return workspace >= 0 and not is_fullscreen


if __name__ == '__main__':
    if not can_run():
        print("Will not run when in special workspace and fullscreen")
        sys.exit(1)

    screensaver_index = random.randint(0, len(screensavers)-1)
    screensaver = screensavers[screensaver_index]
    run_screensaver(screensaver)
