#!/usr/bin/python

import subprocess
import time

if __name__ == "__main__":
    o = subprocess.run(["ps", "cax"], capture_output=True)

    # Show the bar
    # We want to replace because it'll show this process in the output
    if b"waybar" in (o.stdout.replace(b"toggle_waybar", b"")):
        subprocess.Popen(["killall", "waybar"])
        for gap in range(10, 0, -1):
            subprocess.Popen(
                ["hyprctl", f"keyword general:gaps_out {gap}"]).wait()
            time.sleep(0.1)

        # We can use this if we want to change the outside gaps only if there 1 window
        # o = subprocess.run(["hyprctl", "activeworkspace"], capture_output=True)
        # processed_output = o.stdout.split(b"\n")
        #
        # windows = None
        # for item in processed_output:
        #     if item.startswith(b"\twindows: "):
        #         # Decode the bytes to a string in order to get the number
        #         string = item.decode("utf-8")
        #         # Bug: If this is a two digit number then it will only use the
        #         # last digit
        #         windows = int(string[-1])
        #         break
        #
        # if windows is None:
        #     raise EnvironmentError("The windows attribute was not found")
        #
        # I can use this if I only want to change the outer gaps when there
        # is only one window when I run this
        # if windows <= 1:
        #     subprocess.Popen(["hyprctl", "keyword general:gaps_out 0"])
    # Hide the bar
    else:
        subprocess.Popen(["waybar"])
        # Kinda animate adding the gaps
        for gap in range(1, 11):
            subprocess.Popen(
                ["hyprctl", f"keyword general:gaps_out {gap}"]).wait()
            time.sleep(0.1)
