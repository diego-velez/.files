#!/usr/bin/python

import os
import subprocess
import sys

PERSISTENT_FILE = "/tmp/previous_brightness"
CONNECTED_TO_POWER = "/sys/class/power_supply/AC0/online"


def idle():
    print("Running idle function")

    if is_connected_to_power():
        print("No need to dim screen, device is connected to power!")

        # Since resume is not guarded
        # I need to delete the previous brigthness file
        # for it not to change brightness when it never dimmed it
        if os.path.exists(PERSISTENT_FILE):
            os.remove(PERSISTENT_FILE)

        exit(1)

    current_brightness_output = subprocess.run(
        ["brightnessctl", "get", "--percentage"], capture_output=True
    )
    current_brightness = current_brightness_output.stdout.decode().strip()

    with open(PERSISTENT_FILE, "w") as f:
        f.write(current_brightness)

    subprocess.run(["brightnessctl", "set", "0"])
    print("Finished idle function")


def resume():
    print("Running resume function")
    prev = None

    try:
        with open(PERSISTENT_FILE, "r") as f:
            prev = f.read()
    except FileNotFoundError:
        print(f"{PERSISTENT_FILE} file does not exist")
        exit(1)

    subprocess.run(["brightnessctl", "set", f"{prev}%"])
    print("Finished resume function")


def is_connected_to_power():
    with open(CONNECTED_TO_POWER, "r") as connected:
        status = connected.read().strip()
        return status == "1"


ARGS = {"idle": idle, "resume": resume}

if __name__ == "__main__":
    if len(sys.argv) == 1:
        print("Must specify argument, either 'idle' or 'resume'")
        exit(1)

    mode = sys.argv[1]
    mode_is_valid = mode in ARGS.keys()
    if not mode_is_valid:
        print(f"{mode} is not a valid argument, either 'idle' or 'resume'")
        exit(1)

    ARGS[mode]()
